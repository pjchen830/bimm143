---
title: "Class 6: R functions Lab"
author: "Patricia Chen A16138722"
date: "04/25/2023"
format: pdf
---

Task: Create a new RStudio project for class 6 session. Answer Questions 1-5 (Note that Q4 is optional but Q5 is not).

Questions:

> Q1. Write a function grade() to determine an overall grade from a vector of student homework assignment scores dropping the lowest single score. If a student misses a homework (i.e. has an NA value) this can be used as a score to be potentially dropped. Your final function should be adquately explained with code comments and be able to work on an example class gradebook such as this one in CSV format: "https://tinyurl.com/gradeinput" [3pts]

Answer:

```{r}
# Example input vectors
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```

```{r}
# Straightforward mean()
mean(student1)
```

First identify the lowest score in order to drop it.

```{r}
min(student1)

# Identify the lowest element of the vector.
which.min(student1)
```

Exclude the lowest score from mean() calculation. 
```{r}
# Returns all except for the sixth element of the vector 
student1[-6] 
```

Function which.mean() return all other elements of the vector.  
```{r}
# First working snippet
mean(student1[-which.min(student1)])

```

To find out if this will work for other students
Approach 1: use na.rm=TRUE argument for mean, but it would not be a good approach, since the yielded results are not equal

```{r}
# student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
mean(student2[-which.min(student2)])

```

Approach 2: mask all NA values with zero. 
1. Find the NA elements of the vector. To find the NA elements use:
```{r}
x <- student2

which(is.na(x))
```

2. Mask the identified NA elements, and replace them with zeros:

```{r}
x[which(is.na(x))] <- 0
```

3. Drop the lowest score:

```{r}

mean(x[-which.min(x)])

```

Our working snippet now:

```{r}
# student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
x <- student3
x[which(is.na(x))] <- 0
mean(x[-which.min(x)])
```

Turn working snippet into a function 

3 main parts of a function:
1. Function name, which is `grade()`
2. Function input arguments, student scores vector
3. Function body, the working snippet

Using RStudio, select `Code -> Extract Function`

```{r}
grade <- function(x) {
  x[which(is.na(x))] <- 0
  mean(x[-which.min(x)])
}
```

```{r}
grade(student1)
grade(student2)
grade(student3)
```

Comments to explain how to use this function.

```{r}
#' The average scores for a vector of student homework assignment scores is calculated after dropping the lowest single score. 
#' Missing values (NA) treated as 0 
#' @param x A numeric vector of homework scores 
#' @return Average score
#' @export
#' @examples
#' student <- c(100, NA, 90, 97)
#' grade(student)
#' 
grade <- function(x) {
  # NA replaced with 0
  x[which(is.na(x))] <- 0
  # Lowest score excluded from mean 
  mean(x[-which.min(x)])
}
```

Function on our whole class data from this CSV format: "https://tinyurl.com/gradeinput"

```{r}
url <- "https://tinyurl.com/gradeinput"
gradebook <- read.csv(url, row.names=1)
```

```{r}
apply(gradebook, 1, grade)

```


> Q2. Using your grade() function and the supplied gradebook, Who is the top scoring student overall in the gradebook? [3pts]

Run the apply() function

```{r}
results <- apply(gradebook, 1, grade)
sort(results, decreasing = TRUE)
```
```{r}
which.max(results)
```

Answer: The top scoring student overall is Student 18.

> Q3. From your analysis of the gradebook, which homework was toughest on students (i.e. obtained the lowest scores overall? [2pts]

```{r}
ave.scores <- apply(gradebook, 2, mean, na.rm=TRUE)

which.min(ave.scores)
```

```{r}
med.scores <- apply(gradebook, 2, median, na.rm=TRUE)

which.min(med.scores)
```

```{r}
boxplot(gradebook)
```

Answer: According to our yielded bar plot and data, the toughest homework on the students is HW2.


> Q4. Optional Extension: From your analysis of the gradebook, which homework was most predictive of overall score (i.e. highest correlation with average grade score)? [1pt]

```{r}
masked.gradebook <- gradebook
masked.gradebook[ is.na(masked.gradebook) ] <- 0
masked.gradebook
```

```{r}
cor(results, masked.gradebook$hw5)

```

```{r}
apply(masked.gradebook, 2, cor, x=results)
```

Answer: According to the analysis of the gradebook, the homework most predictive of the overall score is Hw5. 


> Q5. Make sure you save your Quarto document and can click the "Render" (or Rmark- down"Knit") button to generate a PDF foramt report without errors. Finally, submit your PDF to gradescope. [1pt]

